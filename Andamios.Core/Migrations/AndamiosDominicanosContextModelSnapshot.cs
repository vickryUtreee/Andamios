// <auto-generated />
using System;
using Andamios.Core.Data.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Andamios.Core.Migrations
{
    [DbContext(typeof(AndamiosDominicanosContext))]
    partial class AndamiosDominicanosContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Andamios.Core.Data.Entities.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Nombre");

                    b.HasKey("Id");

                    b.ToTable("Autores");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.Ddagente", b =>
                {
                    b.Property<int>("AgenteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("AgenteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AgenteContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("AgenteContactoTelCel")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("AgenteCorreoElec")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("AgenteDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("AgenteDireccion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("AgenteEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("AgenteFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("AgenteFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("AgentePais")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("AgenteTelFax1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("AgenteTelOficina1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("AgenteTelOficina2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("AgenteUsuRegistro")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("AgenteId");

                    b.ToTable("DDAgente");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdclaseProd", b =>
                {
                    b.Property<short>("ClaProdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClaProdID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaProdCtrlInventario")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdDesc")
                        .HasMaxLength(100)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClaProdFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ClaProdFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ClaProdUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClaProdUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ClaProdId");

                    b.ToTable("DDClaseProd");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.Ddcliente", b =>
                {
                    b.Property<int>("ClienteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ClienteID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClienteCodigoVendedor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContactoCel1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteContactoCel2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteCorreoElec")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ClienteDireccion")
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<string>("ClienteEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ClienteFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ClienteFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ClienteGerente")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ClienteGestorCobros")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<bool>("ClienteIsActive");

                    b.Property<int?>("ClienteRegion");

                    b.Property<int?>("ClienteSector");

                    b.Property<string>("ClienteTelFax")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTelOf1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTelOf2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("ClienteTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("ClienteTipoComprobante");

                    b.Property<int?>("ClienteTipoId")
                        .HasColumnName("ClienteTipoID");

                    b.Property<string>("ClienteUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ClienteUsuarioRegistro")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ClienteId");

                    b.ToTable("DDCliente");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconDespDet", b =>
                {
                    b.Property<int>("ConDespDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDespDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConDespDetCantOrd");

                    b.Property<string>("ConDespDetProdId")
                        .HasColumnName("ConDespDetProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("ConDespEnDetId")
                        .HasColumnName("ConDespEnDetID");

                    b.HasKey("ConDespDetId");

                    b.ToTable("DDConDespDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconDespEnc", b =>
                {
                    b.Property<int>("ConDespEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDespEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConDespEnCliId")
                        .HasColumnName("ConDespEnCliID");

                    b.Property<int?>("ConDespEnConteoId")
                        .HasColumnName("ConDespEnConteoID");

                    b.Property<string>("ConDespEnCotiId")
                        .HasColumnName("ConDespEnCotiID")
                        .HasMaxLength(10);

                    b.Property<string>("ConDespEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ConDespEnFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("ConDespEnOrdenC")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ConDespEnProyectoId")
                        .HasColumnName("ConDespEnProyectoID");

                    b.Property<string>("ConDespEnTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("ConDespEnUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ConDespEnId");

                    b.ToTable("DDConDespEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconDevoDet", b =>
                {
                    b.Property<int>("ConDevoDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDevoDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ConDevoCantidad")
                        .HasMaxLength(10);

                    b.Property<int?>("ConDevoDetEnId")
                        .HasColumnName("ConDevoDetEnID");

                    b.Property<string>("ConDevoProdId")
                        .HasColumnName("ConDevoProdID")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ConDevoDetId");

                    b.ToTable("DDConDevoDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconDevoEnc", b =>
                {
                    b.Property<int>("ConDevoEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ConDevoEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ConDevoEnCliId")
                        .HasColumnName("ConDevoEnCliID");

                    b.Property<int?>("ConDevoEnContId")
                        .HasColumnName("ConDevoEnContID");

                    b.Property<string>("ConDevoEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("ConDevoEnProyectoId")
                        .HasColumnName("ConDevoEnProyectoID");

                    b.Property<string>("ConDevoEnTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ConDevoFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<string>("ConDevoOrdenC")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("ConDevoUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ConDevoEnId");

                    b.ToTable("DDConDevoEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconteoDespDet", b =>
                {
                    b.Property<int>("ContDespDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDespDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDespCantProdOrd");

                    b.Property<int?>("ContDespCantProyecto");

                    b.Property<int?>("ContDespDetEncId")
                        .HasColumnName("ContDespDetEncID");

                    b.Property<string>("ContDespProdId")
                        .HasColumnName("ContDespProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.HasKey("ContDespDetId")
                        .HasName("PK_DDConteoDespDetalle");

                    b.ToTable("DDConteoDespDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconteoDespEnc", b =>
                {
                    b.Property<int>("ContDespEncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDespEncID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDespEncClienteId")
                        .HasColumnName("ContDespEncClienteID");

                    b.Property<int?>("ContDespEncCotiId")
                        .HasColumnName("ContDespEncCotiID");

                    b.Property<string>("ContDespEncEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ContDespEncFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContDespEncFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("ContDespEncOrden")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("ContDespEncProyectoId")
                        .HasColumnName("ContDespEncProyectoID");

                    b.Property<string>("ContDespEncUserCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ContDespEncUserModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ContDespEncId");

                    b.ToTable("DDConteoDespEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconteoDevoDet", b =>
                {
                    b.Property<int>("ContDevoDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDevoDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDevoCantProdOrd");

                    b.Property<int?>("ContDevoCantProyecto");

                    b.Property<int?>("ContDevoDetEncId")
                        .HasColumnName("ContDevoDetEncID");

                    b.Property<string>("ContDevoProdId")
                        .HasColumnName("ContDevoProdID")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ContDevoDetId");

                    b.ToTable("DDConteoDevoDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdconteoDevoEnc", b =>
                {
                    b.Property<int>("ContDevoEncId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ContDevoEncID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ContDevoEncClienteId")
                        .HasColumnName("ContDevoEncClienteID");

                    b.Property<int?>("ContDevoEncCoti");

                    b.Property<string>("ContDevoEncEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ContDevoEncFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ContDevoEncFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<int?>("ContDevoEncOrden");

                    b.Property<int?>("ContDevoEncProyectoId")
                        .HasColumnName("ContDevoEncProyectoID");

                    b.Property<string>("ContDevoEncUsuCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ContDevoEncUsuModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ContDevoEncId");

                    b.ToTable("DDConteoDevoEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdcontrolBal", b =>
                {
                    b.Property<int>("BalId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("BalID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("BalCantDevuelta");

                    b.Property<int?>("BalCantOrdenada");

                    b.Property<int?>("BalCantRecibida");

                    b.Property<int?>("BalClienteId")
                        .HasColumnName("BalClienteID");

                    b.Property<int?>("BalCotiId")
                        .HasColumnName("BalCotiID");

                    b.Property<string>("BalProdId")
                        .HasColumnName("BalProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("BalProyectoId")
                        .HasColumnName("BalProyectoID");

                    b.HasKey("BalId");

                    b.HasIndex("BalCotiId")
                        .HasName("ix_Bal_CotiEnID");

                    b.ToTable("DDControlBal");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdcontrolFact", b =>
                {
                    b.Property<DateTime>("CtrlGenFactura")
                        .HasColumnType("date");

                    b.HasKey("CtrlGenFactura");

                    b.ToTable("DDControlFact");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdcotiDetalle", b =>
                {
                    b.Property<int>("CotiDeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CotiDeID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CotiCantProd");

                    b.Property<int?>("CotiEnDeId")
                        .HasColumnName("CotiEnDeID");

                    b.Property<decimal?>("CotiPrecioProd")
                        .HasColumnType("money");

                    b.Property<string>("CotiProdId")
                        .HasColumnName("CotiProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<decimal?>("CotiValorProd")
                        .HasColumnType("money");

                    b.HasKey("CotiDeId");

                    b.HasIndex("CotiEnDeId")
                        .HasName("ix_coti_encabezado");

                    b.ToTable("DDCotiDetalle");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdcotiEncabezado", b =>
                {
                    b.Property<int>("CotiEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("CotiEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CotiEnClas")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("CotiEnClienteId")
                        .HasColumnName("CotiEnClienteID");

                    b.Property<string>("CotiEnCondicionPago")
                        .HasMaxLength(25)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnDescripcion")
                        .HasMaxLength(300)
                        .IsUnicode(false);

                    b.Property<decimal?>("CotiEnDescuento")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<short?>("CotiEnDias");

                    b.Property<string>("CotiEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("CotiEnFechaActivacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CotiEnFechaAnulacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("CotiEnFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<string>("CotiEnImpuesto")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnOrden")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("CotiEnProyectoId")
                        .HasColumnName("CotiEnProyectoID");

                    b.Property<string>("CotiEnTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnTransporte")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioActivacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioAnulacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("CotiEnUsuarioVendedor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("CotiEnId");

                    b.ToTable("DDCotiEncabezado");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdfactDet", b =>
                {
                    b.Property<int>("FactDetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FactDetID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("FactDetCantProd");

                    b.Property<decimal?>("FactDetMonto")
                        .HasColumnType("money");

                    b.Property<string>("FactDetProdId")
                        .HasColumnName("FactDetProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<int?>("FactEnDetId")
                        .HasColumnName("FactEnDetID");

                    b.HasKey("FactDetId");

                    b.ToTable("DDFactDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdfactEnc", b =>
                {
                    b.Property<int>("FactEnId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("FactEnID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FactEnClase")
                        .HasMaxLength(2)
                        .IsUnicode(false);

                    b.Property<int?>("FactEnClienteId")
                        .HasColumnName("FactEnClienteID");

                    b.Property<int?>("FactEnConduceId")
                        .HasColumnName("FactEnConduceID");

                    b.Property<int?>("FactEnCotiId")
                        .HasColumnName("FactEnCotiID");

                    b.Property<decimal?>("FactEnDescGlobal")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<int?>("FactEnDias");

                    b.Property<string>("FactEnEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("FactEnFechaConteo")
                        .HasColumnType("date");

                    b.Property<DateTime?>("FactEnFechaEmision")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("FactEnFechaValida")
                        .HasColumnType("datetime");

                    b.Property<decimal?>("FactEnImpuesto")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<string>("FactEnNumeroComprobante")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<string>("FactEnOrden")
                        .HasMaxLength(15)
                        .IsUnicode(false);

                    b.Property<int?>("FactEnProyectoId")
                        .HasColumnName("FactEnProyectoID");

                    b.Property<string>("FactEnTipo")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<int?>("FactEnTipoComprobante");

                    b.Property<string>("FactEnUsuarioCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("FactEnVendedor")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("FactEnId");

                    b.HasIndex("FactEnFechaConteo")
                        .HasName("ix_factenc_FecConteo");

                    b.ToTable("DDFactEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdingInvDet", b =>
                {
                    b.Property<int>("TraDeIngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraDeIngID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraDeCantidad");

                    b.Property<int?>("TraDeEnIngId")
                        .HasColumnName("TraDeEnIngID");

                    b.Property<int?>("TraDeProdId")
                        .HasColumnName("TraDeProdID");

                    b.HasKey("TraDeIngId");

                    b.ToTable("DDIngInvDet");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdingInvEnc", b =>
                {
                    b.Property<int>("TraEnIngId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraEnIngID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraEnCodAgeId")
                        .HasColumnName("TraEnCodAgeID");

                    b.Property<int?>("TraEnCodSupId")
                        .HasColumnName("TraEnCodSupID");

                    b.Property<string>("TraEnFactAge")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TraEnFecCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TraEnFecFactAge")
                        .HasColumnType("date");

                    b.Property<string>("TraEnNumEmbarque")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TraEnOrdenCompra")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("TraEnUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraEnIngId");

                    b.ToTable("DDIngInvEnc");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdmaeInventario", b =>
                {
                    b.Property<string>("MinvId")
                        .HasColumnName("MInvID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<short?>("MinvClase")
                        .HasColumnName("MInvClase");

                    b.Property<decimal?>("MinvCostoAdquisicion")
                        .HasColumnName("MInvCostoAdquisicion")
                        .HasColumnType("money");

                    b.Property<string>("MinvDescripcion")
                        .HasColumnName("MInvDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("MinvEstatus")
                        .HasColumnName("MInvEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("MinvFechaCreacion")
                        .HasColumnName("MInvFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("MinvFechaModifica")
                        .HasColumnName("MInvFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("MinvPeso")
                        .HasColumnName("MInvPeso")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MinvPiezaServicio")
                        .HasColumnName("MInvPiezaServicio")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<decimal?>("MinvPrecioRentaDia")
                        .HasColumnName("MInvPrecioRentaDia")
                        .HasColumnType("money");

                    b.Property<decimal?>("MinvPrecioRentaFija")
                        .HasColumnName("MInvPrecioRentaFija")
                        .HasColumnType("money");

                    b.Property<decimal?>("MinvPrecioVenta")
                        .HasColumnName("MInvPrecioVenta")
                        .HasColumnType("money");

                    b.Property<int?>("MinvTotalIngresado")
                        .HasColumnName("MInvTotalIngresado");

                    b.Property<int?>("MinvTotalOrdenado")
                        .HasColumnName("MInvTotalOrdenado");

                    b.Property<int?>("MinvTotalRentado")
                        .HasColumnName("MInvTotalRentado");

                    b.Property<string>("MinvUnidad")
                        .HasColumnName("MInvUnidad")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("MinvUsuarioCreacion")
                        .HasColumnName("MInvUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("MinvUsuarioModifica")
                        .HasColumnName("MInvUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("MinvId");

                    b.ToTable("DDMaeInventario");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.Ddproyecto", b =>
                {
                    b.Property<int>("ProId")
                        .HasColumnName("ProID");

                    b.Property<int>("ProClienteId")
                        .HasColumnName("ProClienteID");

                    b.Property<string>("ProContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("ProCorreoContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<decimal?>("ProDescuentoGlobal")
                        .HasColumnType("decimal(2, 2)");

                    b.Property<string>("ProDireccion")
                        .IsRequired()
                        .HasMaxLength(250)
                        .IsUnicode(false);

                    b.Property<DateTime?>("ProFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("ProFechaProyecto")
                        .HasColumnType("date");

                    b.Property<string>("ProNombre")
                        .IsRequired()
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("ProTelContacto")
                        .HasMaxLength(10);

                    b.Property<string>("ProUsuarioCreacion")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProUsuarioModifica")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("ProVendedorId")
                        .IsRequired()
                        .HasColumnName("ProVendedorID")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("ProId");

                    b.ToTable("DDProyecto");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.Ddsuplidor", b =>
                {
                    b.Property<int>("SuplidorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("SuplidorID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("SuplidorContacto")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorContactoTelCel")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorCorreoElec")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorDescripcion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorDireccion")
                        .HasMaxLength(150)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("SuplidorFechaCreacion")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("SuplidorFechaModifica")
                        .HasColumnType("datetime");

                    b.Property<string>("SuplidorPais")
                        .HasMaxLength(50)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelFax1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelOficina1")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorTelOficina2")
                        .HasMaxLength(20)
                        .IsUnicode(false);

                    b.Property<string>("SuplidorUsuRegistro")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("SuplidorId");

                    b.ToTable("DDSuplidor");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdtipComprobante", b =>
                {
                    b.Property<int>("TcompId")
                        .HasColumnName("TCompID");

                    b.Property<string>("TcompDesc")
                        .HasColumnName("TCompDesc")
                        .HasMaxLength(100);

                    b.Property<string>("TcompEstatus")
                        .HasColumnName("TCompEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TcompFechaCrea")
                        .HasColumnName("TCompFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("TcompFechaModi")
                        .HasColumnName("TCompFechaModi")
                        .HasColumnType("datetime");

                    b.Property<string>("TcompImpuesto")
                        .HasColumnName("TCompImpuesto")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TcompUsuCrea")
                        .HasColumnName("TCompUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.Property<string>("TcompUsuModi")
                        .HasColumnName("TCompUsuModi")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TcompId");

                    b.ToTable("DDTipComprobante");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdtipoTraAju", b =>
                {
                    b.Property<int>("TraTipoId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraTipoID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TraTipoAjuste")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<string>("TraTipoDesc")
                        .HasMaxLength(75)
                        .IsUnicode(false);

                    b.Property<string>("TraTipoEstatus")
                        .HasMaxLength(1)
                        .IsUnicode(false);

                    b.Property<DateTime?>("TraTipoFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<string>("TratipoUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraTipoId");

                    b.ToTable("DDTipoTraAju");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.DdtraAjuInv", b =>
                {
                    b.Property<int>("TraAjuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("TraAjuID")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TraAjuCantidad");

                    b.Property<int?>("TraAjuCodId")
                        .HasColumnName("TraAjuCodID");

                    b.Property<DateTime?>("TraAjuFechaCrea")
                        .HasColumnType("datetime");

                    b.Property<string>("TraAjuProdId")
                        .HasColumnName("TraAjuProdID")
                        .HasMaxLength(10)
                        .IsUnicode(false);

                    b.Property<string>("TraAjuUsuCrea")
                        .HasMaxLength(5)
                        .IsUnicode(false);

                    b.HasKey("TraAjuId");

                    b.ToTable("DDTraAjuInv");
                });

            modelBuilder.Entity("Andamios.Core.Data.Entities.Usuario", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Apellido");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<bool>("Estado");

                    b.Property<string>("Imagen");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("Nombre");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("RefreshToken");

                    b.Property<string>("Role");

                    b.Property<string>("SecurityStamp");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128);

                    b.Property<string>("Name")
                        .HasMaxLength(128);

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens");
                });

            modelBuilder.Entity("ProyectoCalidad.Domain.Entities.AuditLog", b =>
                {
                    b.Property<Guid>("AuditLogID")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ColumnName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<DateTime>("EventDateUTC");

                    b.Property<string>("EventType")
                        .IsRequired()
                        .HasMaxLength(1);

                    b.Property<string>("NewValue");

                    b.Property<string>("OriginalValue");

                    b.Property<string>("RecordID")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("TableName")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.Property<string>("UserID")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("AuditLogID");

                    b.ToTable("AuditLogs");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Andamios.Core.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Andamios.Core.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Andamios.Core.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Andamios.Core.Data.Entities.Usuario")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
